<!-- index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/styles.css">
  <title>Word Cloud </title>
  <script src="https://d3js.org/d3.v3.min.js"></script>
  <script src="https://rawgit.com/jasondavies/d3-cloud/master/build/d3.layout.cloud.js"></script>
</head>
<body>
  <div id="wordCloud"></div>

  <script>
    // Encapsulate the word cloud functionality
    function wordCloud(selector) {
        var fill = d3.scale.category20();

        // Construct the word cloud's SVG element
        var svg = d3.select(selector).append("svg")
            .attr("width", 500)
            .attr("height", 500)
            .append("g")
            .attr("transform", "translate(250,250)");

        // Draw the word cloud
        function draw(words) {
            var cloud = svg.selectAll("g text")
                            .data(words, function(d) { return d.text; })

            // Entering words
            cloud.enter()
                .append("text")
                .style("font-family", "Impact")
                .style("fill", function(d, i) { return fill(i); })
                .attr("text-anchor", "middle")
                .attr('font-size', 1)
                .on("click", function(d) {
                    // Handle click event, for example, opening a link
                    window.open('/api/word-cloud/' + encodeURIComponent(d.text), '_blank');
                })
                .text(function(d) { return d.text; });

            // Entering and existing words
            cloud
                .transition()
                    .duration(500)
                    .style("font-size", function(d) { return d.size + "px"; })
                    .attr("transform", function(d) {
                        return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                    })
                    .style("fill-opacity", 1);

            // Exiting words
            cloud.exit()
                .transition()
                    .duration(200)
                    .style('fill-opacity', 1e-6)
                    .attr('font-size', 1)
                    .remove();
        }

        // Use the module pattern to encapsulate the visualisation code
        return {
            // Recompute the word cloud for a new set of words
            update: function(words) {
                d3.layout.cloud().size([500, 500])
                    .words(words)
                    .padding(1)
                    .rotate(function() { return ~~(Math.random() * 2) * 90; })
                    .font("Impact")
                    .fontSize(function(d) { return d.size; })
                    .on("end", draw)
                    .start();
            }
        };
    }

    // Fetch words from the API
    function fetchWordCloudData() {
        return fetch('/api/word-cloud')
            .then(response => response.json())
            .catch(error => console.error('Error fetching word cloud data:', error));
    }
var wrd;
    // Prepare one of the sample sentences
    function getWords() {
        return fetchWordCloudData()
            .then(data => {
                const words = data.words;
                
                return words.map(word => ({
                    text: word.word,
                    size:10+ word.count * 8
                }));
            });
    }

    // This method tells the word cloud to redraw with a new set of words
   async function showNewWords(vis) {
     
       const words=await  getWords();
       wrd=words;
       vis.update(words);
                setInterval(function() { updateshowNewWords(vis); }, 2500);
            
                
    }
    function updateshowNewWords(vis) {
     
   
            vis.update(wrd);
           
}
    // Create a new instance of the word cloud visualisation
    var myWordCloud = wordCloud('#wordCloud');

    // Start cycling through the demo data
    showNewWords(myWordCloud);
  </script>
</body>
</html>
